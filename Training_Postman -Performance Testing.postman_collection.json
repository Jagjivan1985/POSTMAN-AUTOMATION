{
	"info": {
		"_postman_id": "5fadb877-97f8-4976-998d-1ac871196769",
		"name": "Training_Postman -Performance Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18446898"
	},
	"item": [
		{
			"name": "Positive",
			"item": [
				{
					"name": "CreateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check for successful creation\r",
									"pm.test(\"Status code is 201 Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// Verify response time is less than 1500ms\r",
									"pm.test(\"Response time is less than 1500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
									"});\r",
									"\r",
									"// Verify Content-Type is application/json\r",
									"pm.test(\"Verify Content-Type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// Validate response body contains required fields\r",
									"pm.test(\"Response body has required fields [id, name, email, gender, status]\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.all.keys(\"id\", \"name\", \"email\", \"gender\", \"status\");\r",
									"});\r",
									"\r",
									"// Schema validation\r",
									"pm.test(\"Schema is valid\", function () {\r",
									"    const schema = {\r",
									"        type: \"object\",\r",
									"        properties: {\r",
									"            id: { type: \"number\" },\r",
									"            name: { type: \"string\" },\r",
									"            email: { type: \"string\", format: \"email\" },\r",
									"            gender: { type: \"string\", enum: [\"male\", \"female\"] },\r",
									"            status: { type: \"string\", enum: [\"active\", \"inactive\"] }\r",
									"        },\r",
									"        required: [\"id\", \"name\", \"email\", \"gender\", \"status\"]\r",
									"    };\r",
									"\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;\r",
									"});\r",
									"\r",
									"// Function to validate email format\r",
									"function validateEmail(email) {\r",
									"    pm.test(\"Email is in a proper format\", function () {\r",
									"        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Basic email regex\r",
									"        pm.expect(emailRegex.test(email)).to.be.true;\r",
									"    });\r",
									"}\r",
									"\r",
									"// Function to validate gender field\r",
									"function checkGender(gender) {\r",
									"    pm.test(\"Gender field is Male or Female\", function () {\r",
									"        pm.expect(gender).to.be.oneOf([\"male\", \"female\"]);\r",
									"    });\r",
									"}\r",
									"\r",
									"pm.test(\"Verify gender is male or female\", function () {\r",
									"    pm.expect(pm.response.json().gender).to.be.oneOf([\"male\", \"female\"]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify status is active or inactive\", function () {\r",
									"    pm.expect(pm.response.json().status).to.be.oneOf([\"active\", \"inactive\"]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify the body in JSON format\", function () {\r",
									"    pm.response.to.have.body;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer a398925ea095d2e175e04fbb1109b2fe56d7341d52bb82d8ee33271f96f46a0b"
							},
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{{$randomNamePrefix}} {$randomFullName}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}